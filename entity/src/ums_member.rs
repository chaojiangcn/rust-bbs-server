//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "ums_member")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub member_level_id: Option<i64>,
    #[sea_orm(unique)]
    pub username: Option<String>,
    pub password: Option<String>,
    pub nickname: Option<String>,
    #[sea_orm(unique)]
    pub phone: Option<String>,
    pub status: Option<i32>,
    pub create_time: Option<DateTime>,
    pub icon: Option<String>,
    pub gender: Option<i32>,
    pub birthday: Option<Date>,
    pub city: Option<String>,
    pub job: Option<String>,
    pub personalized_signature: Option<String>,
    pub source_type: Option<i32>,
    pub integration: Option<i32>,
    pub growth: Option<i32>,
    pub luckey_count: Option<i32>,
    pub history_integration: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
